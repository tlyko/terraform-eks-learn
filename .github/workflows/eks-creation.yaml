name: 'EKS provisioning'

on:
  workflow_dispatch:

jobs:
  provisioning:
    name: 'EKS creation'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # # clean infrastructure
    # - name: Terraform Destroy
    #   run: terraform destroy
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}         

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}         

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Assign Variables
      run: |
        echo "region=$(terraform output -raw region)" >> $GITHUB_ENV
        echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_ENV

    - name: Create Kube-config file
      run: |
        aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}" --profile default && aws configure set --profile default && aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default && aws configure set region "${{ env.region }}" --profile default && aws configure set output "json" --profile default
        aws eks --region "${{ env.region }}" update-kubeconfig --name "${{ env.cluster_name }}"

    - name: Install Metrics Server
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
      

      
